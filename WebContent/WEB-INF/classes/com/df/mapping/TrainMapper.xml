<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.df.dao.TrainDAO">
  <resultMap id="BaseResultMap" type="com.df.domain.Train">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="student_id" jdbcType="INTEGER" property="studentId" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="class_type" jdbcType="INTEGER" property="classType" />
    <result column="coach_id" jdbcType="INTEGER" property="coachId" />
    <result column="start_time" jdbcType="TIMESTAMP" property="startTime" />
    <result column="end_time" jdbcType="TIMESTAMP" property="endTime" />
    <result column="memo" jdbcType="VARCHAR" property="memo" />
  </resultMap>
  <sql id="Base_Column_List">
    id, student_id, time, class_type, coach_id, start_time, end_time, memo
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from train
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from train
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.df.domain.Train">
    insert into train (id, student_id, time, 
      class_type, coach_id, start_time, 
      end_time, memo)
    values (#{id,jdbcType=INTEGER}, #{studentId,jdbcType=INTEGER}, #{time,jdbcType=TIMESTAMP}, 
      #{classType,jdbcType=INTEGER}, #{coachId,jdbcType=INTEGER}, #{startTime,jdbcType=TIMESTAMP}, 
      #{endTime,jdbcType=TIMESTAMP}, #{memo,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.df.domain.Train">
    insert into train
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="studentId != null">
        student_id,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="classType != null">
        class_type,
      </if>
      <if test="coachId != null">
        coach_id,
      </if>
      <if test="startTime != null">
        start_time,
      </if>
      <if test="endTime != null">
        end_time,
      </if>
      <if test="memo != null">
        memo,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="studentId != null">
        #{studentId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="classType != null">
        #{classType,jdbcType=INTEGER},
      </if>
      <if test="coachId != null">
        #{coachId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memo != null">
        #{memo,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.df.domain.Train">
    update train
    <set>
      <if test="studentId != null">
        student_id = #{studentId,jdbcType=INTEGER},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="classType != null">
        class_type = #{classType,jdbcType=INTEGER},
      </if>
      <if test="coachId != null">
        coach_id = #{coachId,jdbcType=INTEGER},
      </if>
      <if test="startTime != null">
        start_time = #{startTime,jdbcType=TIMESTAMP},
      </if>
      <if test="endTime != null">
        end_time = #{endTime,jdbcType=TIMESTAMP},
      </if>
      <if test="memo != null">
        memo = #{memo,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.df.domain.Train">
    update train
    set student_id = #{studentId,jdbcType=INTEGER},
      time = #{time,jdbcType=TIMESTAMP},
      class_type = #{classType,jdbcType=INTEGER},
      coach_id = #{coachId,jdbcType=INTEGER},
      start_time = #{startTime,jdbcType=TIMESTAMP},
      end_time = #{endTime,jdbcType=TIMESTAMP},
      memo = #{memo,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>